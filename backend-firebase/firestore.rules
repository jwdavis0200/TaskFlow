rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read/write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects: users can access projects they own or are members of
    match /projects/{projectId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == resource.data.owner ||
         request.auth.uid in resource.data.members);
    }
    
    // Boards: inherit project permissions
    match /boards/{boardId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        (request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.owner ||
         request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members);
    }
    
    // Columns: inherit project permissions
    match /columns/{columnId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        (request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.owner ||
         request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members);
    }
    
    // Tasks: inherit project permissions
    match /tasks/{taskId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/projects/$(resource.data.projectId)) &&
        (request.auth.uid == get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.owner ||
         request.auth.uid in get(/databases/$(database)/documents/projects/$(resource.data.projectId)).data.members);
    }
  }
}